<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:vc="clr-namespace:ToDoApp.Converter"
             x:Class="ToDoAPP.View.ItemDetailPage">
    <ContentPage.ToolbarItems>
        <ToolbarItem Text="Sort by" Order="Secondary" Priority="0"/>
        <ToolbarItem Text="Adding shortcuts to the home screen" Order="Secondary" Priority="0"/>
        <ToolbarItem Text="Change theme" Order="Secondary" Priority="0"/>
        <ToolbarItem Text="Hide completed tasks" Order="Secondary" Priority="0"/>
        <ToolbarItem Text="Send a copy" Order="Secondary" Priority="0"/>
    </ContentPage.ToolbarItems>

    <ContentPage.Resources>
        <vc:IiconConverter x:Key="icc"/>
        <vc:IDecorStatusConverter x:Key="isc"/>
    </ContentPage.Resources>

    <ContentPage.Content>
        <Grid x:Name="grid">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="50"/>
            </Grid.RowDefinitions>

            <!--设置绑定菜单模块，虚线消失，选择触发事件背景颜色-->
            <ListView  Grid.RowSpan="2" RowHeight="40" SeparatorVisibility="None" 
                       HasUnevenRows="True" ItemsSource="{Binding TaskInfos}" ItemSelected="ListView_ItemSelected" >
                <ListView.ItemTemplate>
                    <!--模板部分-->
                    <DataTemplate>
                        <ViewCell>
                            <SwipeView Margin="8,4,8,0">
                                <SwipeView.LeftItems><!--左边滑动-->
                                    <SwipeItems>
                                        <SwipeItem Text="Left" BackgroundColor="Blue"/>
                                    </SwipeItems>
                                </SwipeView.LeftItems>
                                <SwipeView.RightItems><!--右边滑动-->
                                    <SwipeItems>
                                        <SwipeItem Text="Delete" BackgroundColor="Red"
                                                 Command="{Binding Source={x:Reference grid},Path=BindingContext.DeleteCommand}" CommandParameter="{Binding}"   />
                                    </SwipeItems>
                                </SwipeView.RightItems>
                                <Grid VerticalOptions="Center" BackgroundColor="White" Margin="8,4,8,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50"/>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="50"/>
                                </Grid.ColumnDefinitions>

                                    <!--任务勾选按钮-->
                                    <Button  Text="{Binding IsDeleted,Converter={StaticResource icc},ConverterParameter='Left'}" BackgroundColor="Transparent" FontSize="22" FontFamily="iconfont.ttf#"
                                         Command="{Binding Source={x:Reference grid},Path=BindingContext.ExcludeCommand}" CommandParameter="{Binding}"
                                         TextColor="{Binding Source={x:RelativeSource AncestorType={x:Type ContentPage}},Path=BackgroundColor}"/> <!--勾选任务颜色和背景一致-     在当前界面当中找到ContentPage类型对象然后拿到背景颜色-->

                                    <StackLayout Grid.Column="1">
                                    <Label Text="{Binding Content}" TextColor="Black"
                                           TextDecorations="{Binding IsDeleted,Converter={StaticResource isc}}"/>
                                    <Label Text="Tasks"/>
                                </StackLayout>

                                    <!--收藏勾选按钮-->
                                    <Button Grid.Column="2" Text="{Binding IsFavorite ,Converter={StaticResource icc},ConverterParameter='Right'}" BackgroundColor="Transparent"  FontSize="22"  FontFamily="iconfont.ttf#"
                                         Command="{Binding Source={x:Reference grid},Path=BindingContext.KeppCommand}" CommandParameter="{Binding}"
                                            TextColor="{Binding Source={x:RelativeSource AncestorType={x:Type ContentPage}},Path=BackgroundColor}"/>
                            </Grid>
                            </SwipeView>
                            
                           

                        </ViewCell>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            
            <!--//添加任务栏-->
            <StackLayout x:Name="xlayout" Grid.Row="1" Orientation="Horizontal" BackgroundColor="White">
                
                
                <!--输入框圆形按钮-->
                <Button BackgroundColor="Transparent" WidthRequest="45" HorizontalOptions="Start" FontSize="24" TextColor="DarkBlue" FontFamily="iconfont.ttf#" Text="&#xe80c;"/>
                
                
                <!--输入框-->
                <Editor x:Name="xEdit"  HorizontalOptions="FillAndExpand" Placeholder="Add Task"
                        Text="{Binding Content}"/><!--// 提示文本-->
                
                
                
                <!--上传按钮-->
                <Button BackgroundColor="Transparent" WidthRequest="45" HorizontalOptions="End" FontSize="20" TextColor="#708090"
                        FontFamily="iconfont.ttf#" Text="&#xe62e;" Margin="8"
                         Command="{Binding Source={x:Reference grid},Path=BindingContext.AddCommand}"/>

            </StackLayout>

            <Button x:Name="btnAdd"  Grid.Row="1" Text="&#xe600;" FontFamily="iconfont.ttf#" HorizontalOptions="EndAndExpand" Margin="0,0,10,10" FontSize="20"
                    CornerRadius="30" BackgroundColor="#01EEEE"/>
            <!--底部添加任务按钮-->
        </Grid>
    </ContentPage.Content>
</ContentPage>